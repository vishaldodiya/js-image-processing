!function(t){var e={};function a(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=t,a.c=e,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)a.d(n,r,function(e){return t[e]}.bind(null,r));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=1)}([function(t,e){t.exports=React},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=a(0),r=a(2),s=a(3);r.render(n.createElement(s.Canvas,{src:["https://images.unsplash.com/photo-1485249884563-0de923c9a8db","https://images.unsplash.com/photo-1464821541677-ceb53bcf1541","https://images.unsplash.com/reserve/bOvf94dPRxWu0u3QsPjF_tree.jpg","https://images.unsplash.com/photo-1426001094903-70f302dc2d24","https://images.unsplash.com/photo-1456030680012-9aa5bd962cc4"]}),document.getElementById("js-image-processing"))},function(t,e){t.exports=ReactDOM},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=a(0);class r extends n.Component{componentDidMount(){this.updateCanvas();let t=this.refs.btnInvert,e=this.refs.btnGrey,a=this.refs.btnReset,n=this.refs.brightness,r=this.refs.contrast;t.addEventListener("click",this.invertColor.bind(this)),e.addEventListener("click",this.convertGreyScale.bind(this)),a.addEventListener("click",this.resetImage.bind(this)),n.addEventListener("change",this.changeBrightness.bind(this)),r.addEventListener("change",this.changeContrast.bind(this))}updateCanvas(){const t=new Image(300,300);this.canvasRef=this.refs.canvas,this.canvasRef.width=300,this.canvasRef.height=300,this.context=this.canvasRef.getContext("2d"),t.src=this.props.src[0],t.crossOrigin="Anonymous",t.onload=()=>{this.context.drawImage(t,0,0,300,300),this.imageData=this.context.getImageData(0,0,300,300)},this.canvasRef.addEventListener("mousemove",this.colorPicker.bind(this))}colorPicker(t){var e=t.layerX,a=t.layerY,n=this.context.getImageData(e,a,1,1).data,r="rgba("+n[0]+", "+n[1]+", "+n[2]+", "+n[3]/255+")";let s=this.refs.colorPicker;s.style.background=r,s.textContent=r}invertColor(){var t=this.context.getImageData(0,0,300,300);let e=t.data;for(var a=0;a<e.length;a+=4)e[a]=255-e[a],e[a+1]=255-e[a+1],e[a+2]=255-e[a+2];this.context.putImageData(t,0,0)}convertGreyScale(){var t=this.context.getImageData(0,0,300,300);let e=t.data;for(var a=0;a<e.length;a+=4){var n=(e[a]+e[a+1]+e[a+2])/3;e[a]=n,e[a+1]=n,e[a+2]=n}this.context.putImageData(t,0,0)}resetImage(){this.context.putImageData(this.imageData,0,0)}changeBrightness(t){var e=this.context.getImageData(0,0,300,300);let a=e.data;for(var n=0;n<a.length;n+=4)a[n]=this.imageData.data[n]+t.target.value,a[n+1]=this.imageData.data[n+1]+t.target.value,a[n+2]=this.imageData.data[n+2]+t.target.value;this.context.putImageData(e,0,0)}changeContrast(t){var e=this.context.getImageData(0,0,300,300);let a=e.data;for(var n=0;n<a.length;n+=4)a[n]=this.imageData.data[n]-t.target.value,a[n+1]=this.imageData.data[n+1]-t.target.value,a[n+2]=this.imageData.data[n+2]-t.target.value;this.context.putImageData(e,0,0)}render(){return n.createElement("div",{className:"container"},n.createElement("canvas",{ref:"canvas"}),n.createElement("div",{ref:"colorPicker",className:"color-picker"}),n.createElement("div",{className:"btnContainer"},n.createElement("button",{ref:"btnInvert"},"Invert Color"),n.createElement("button",{ref:"btnGrey"},"Convert GreyScale"),n.createElement("button",{ref:"btnReset"},"Reset"),n.createElement("input",{type:"number",ref:"brightness",max:"100",min:"-100"}),n.createElement("input",{type:"number",ref:"contrast",max:"100",min:"-100"})))}}e.Canvas=r}]);
//# sourceMappingURL=main.js.map